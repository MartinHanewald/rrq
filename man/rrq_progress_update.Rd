% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progress.R
\name{rrq_progress_update}
\alias{rrq_progress_update}
\title{Post task update}
\usage{
rrq_progress_update(value, error = FALSE)
}
\arguments{
\item{value}{A string with the contents of the update. This will
overwrite any previous progress value, and can be retrieved from
a \code{\link{rrq_controller}} with the \code{task_progress}
method.}

\item{error}{Logical, indicating if we should throw an error if
not running as an \code{rrq} task. Set this to \code{FALSE} if
you want code to work without modification within and outside of
an `rrq` job, or to \code{TRUE} if you want to be sure that
progress messages have made it to the server.}
}
\description{
Post a task progress update.  The progress system in \code{rrq} is
agnostic about how you are going to render your progress, and so
it just a convention - see Details below.
}
\details{
In order to report on progress, a task may, in it's code, write

\preformatted{
rrq::rrq_progress_update("task is 90% done")
}

and this information will be fetchable from \code{rrq_controller}
using the \code{task_progress} method and providing the
\code{task_id}.

The progress value must be a single string.  We may extend this in
a future version to allow serialising an arbitrary R object,
though this adds complication in reading the status later.
}
